name: release

on:
  workflow_dispatch:
    tags:
      - "v*.*.*"
    inputs:
      title:
        description: "Title of the release"
        required: true
        default: "Epherome vX.X.X"
      content:
        description: "Content of the release"
        required: true
        default: "New version of epherome"

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm install
      - name: Webpack Build Production
        run: npm run prod
      - name: Electron Build Package (Linux)
        run: npm run package -- --linux
      - name: Electron Build Package (macOS)
        run: npm run package -- --macos
      - name: Electron Build Package (Windows)
        run: npm run package -- --windows
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.event.tags }}
          name: ${{ github.event.input.title }}
          body: ${{ github.event.input.content }}
          draft: true
          prerelease: true
          files: |
            package/Epherome-${{ github.event.tags }}.exe
            package/Epherome-${{ github.event.tags }}.dmg
            package/Epherome-${{ github.event.tags }}.tar.gz
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
